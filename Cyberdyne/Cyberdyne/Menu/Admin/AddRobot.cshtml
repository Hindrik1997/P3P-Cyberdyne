@using Microsoft.Web.Helpers;
@{

    RepoManager RM = new RepoManager();
    RM.GetComponents();
    Layout = "~/_SiteLayout.cshtml";
    Page.Title = "Add robot";

    var robotName = "";
    var descriptionNL = "";
    var descriptionEN = "";
    var parts = "";
    var softwareLocation = "";
    var category = "";
    var softwareName = "";
    var softwareVersion = "";
    var robotVideoName = "";
    var robotVideo = "";
    var fileVersion = "";

    //Validation fields
    Validation.RequireField("RobotName", "You must enter a robot name");
    Validation.RequireField("DescriptionEN", "You must enter an english description");
    Validation.RequireField("DescriptionNL", "You must enter a dutch description");

    Validation.RequireField("SoftwareName", "You must enter a software name");
    Validation.RequireField("SoftwareVersion", "You must enter a software version");
    Validation.RequireField("SoftwareLocation", "You must enter a link to the software");

    Validation.RequireField("RobotVideoName", "You must enter a name of the video");
    Validation.RequireField("RobotVideoLink", "You must enter a link to the youtube video");

    Validation.RequireField("Parts", "You must specify the parts");

    //Check if validation is valid and a user is logged in
    if (IsPost && Request.Files.Count > 0 && Validation.IsValid() && WebSecurity.IsAuthenticated)
    {

        //Create directories if they don't exist
        var dirPath = Server.MapPath("~/App_Data/UploadedFiles/");
        var imagePath = Server.MapPath("~/App_Data/Images/");
        Directory.CreateDirectory(dirPath);
        Directory.CreateDirectory(imagePath);

        //Variables
        robotName = Request.Form["RobotName"];
        category = Request.Form["Category"];
        descriptionNL = Request.Form["DescriptionNL"];
        descriptionEN = Request.Form["DescriptionEN"];
        parts = Request.Params["Parts"];
        softwareName = Request.Form["SoftwareName"];
        softwareVersion = Request.Form["SoftwareVersion"];
        softwareLocation = Request.Form["SoftwareLocation"];
        robotVideo = Request.Form["RobotVideo"];
        robotVideoName = Request.Form["RobotVideoName"];
        fileVersion = Request.Form["fileVersion"];

        List<RobotImage> image = new List<RobotImage>();
        List<RobotMovie> movie = new List<RobotMovie>();
        List<RobotFile> files = new List<RobotFile>();

        Robot Robot = new Robot(robotName, category, -1, RM);
        Robot.descriptionEnglish = descriptionEN;
        Robot.descriptionDutch = descriptionNL;
        Robot.UpdateData();
        Software Software = new Software(softwareName, softwareLocation, softwareVersion, Robot.ID, -1, RM);
        Software.UpdateData();

        movie.Add(new RobotMovie(robotVideoName, Robot.ID, robotVideo, -1, RM));
        foreach (RobotMovie i in movie)
        {
            i.UpdateData();
        }

        //Catch files and save them on the server
        string[] imageFormats = new string[] { ".jpg", ".png", ".gif", ".jpeg" };
        var fileName = "";
        var fileSavePath = "";

        for (int i = 0; i < Request.Files.Count; i++)
        {
            bool isImage = false;
            var uploadedFile = Request.Files[i];
            fileName = Path.GetFileName(uploadedFile.FileName);

            foreach (var item in imageFormats)
            {
                if (fileName.Contains(item))
                {
                    isImage = true;
                }
            }

            if (isImage)
            {
                fileSavePath = Server.MapPath("~/App_Data/Images/" + fileName);
                uploadedFile.SaveAs(fileSavePath);
                image.Add(new RobotImage(fileName, fileSavePath, Robot.ID, -1, RM));
            }
            else {
                fileSavePath = Server.MapPath("~/App_Data/UploadedFiles/" + fileName);
                uploadedFile.SaveAs(fileSavePath);
                files.Add(new RobotFile(fileName, fileSavePath, fileVersion, Robot.ID, -1, RM));
            }
        }

        foreach (RobotImage i in image)
        {
            i.UpdateData();
        }
        foreach (RobotFile f in files)
        {
            f.UpdateData();
        }
    }
}
<!DOCTYPE html>

<html lang="en">
<head>
    <meta charset="utf-8" />
</head>
<body>
    @if (WebSecurity.IsAuthenticated)
    {
        @Html.ValidationSummary()
        <form method="post" enctype="multipart/form-data" action="">
            <fieldset>
                <p><label for="RobotName">Robot Name:</label></p>
                <input type="text" name="RobotName" value="" placeholder="Name of the robot" />
                <p>
                    <label for="DescriptionEN">Description: (English)</label>
                    <textarea name="DescriptionEN" placeholder="English description of the robot"></textarea>

                </p>

                <p>
                    <label for="DescriptionNL">Description: (Nederlands)</label>
                    <textarea name="DescriptionNL" placeholder="Nederlandse beschrijving van de robot"></textarea>

                </p>
                <p>
                    <label for="Parts">Parts:</label>
                    <input type="text" name="Parts" placeholder=" Part ID's, Comma seperated" />
                    <select multiple id="SELECTOR">
                        <fieldlset>
                            <legend>Parts</legend>
                            @foreach (var Component in RM.componentRepository)
                            {
                                <option value="@Component.ID">
                                    <ul id="menu">
                                        <li>@Component.ID</li>
                                        <li>@Component.componentName</li>
                                    </ul>
                                </option>
                            }
                        </fieldlset>
                    </select>
                </p>

                <p><label for="SoftwareName">Software name:</label></p>
                <input type="text" name="SoftwareName" value="" placeholder="Name of the software"/>

                <p><label for="SoftwareLocation">Software:</label></p>
                <input type="text" name="SoftwareLocation" value="" placeholder="Link to the software repository"/>

                <p><label for="SoftwareVersion">Software version:</label></p>
                <input type="text" name="SoftwareVersion" value="" placeholder="Version of the software"/>

                <p><label for="RobotVideoName">Robotvideo name:</label></p>
                <input type="text" name="RobotVideoName" value="" placeholder="Name of the video"/>

                <p><label for="RobotVideo">Robotvideo (Youtube link):</label></p>
                <input type="text" name="RobotVideo" value="" placeholder="Link to the video"/>

                <p><label for="Files">File:</label></p>
                @FileUpload.GetHtml(
                 initialNumberOfFiles: 1,
                 allowMoreFilesToBeAdded: true,
                 includeFormTag: false,
                 addText: "Add another file",
                 uploadText: "Upload")

                <p><label for="FileVersion">File Version:</label></p>
                <input type="text" name="FileVersion" value="" />

                <p><label for="images">images:</label></p>
                <input type="file" name="image" value="" multiple />

                <p><input type="submit" name="buttonSubmit" value="Add Robot" /></p>
            </fieldset>
        </form>
    }
    else
    {
        <p>Please log in.</p>
    }
</body>
</html>
